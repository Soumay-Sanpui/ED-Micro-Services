services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "5000:5000"
    depends_on:
      user-service:
        condition: service_started
      product-service:
        condition: service_started
    restart: unless-stopped
    volumes:
      - ./gateway:/app

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    expose:
      - "3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    volumes:
      - ./user-service:/app

  user-service-2:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service-2
    expose:
      - "3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    volumes:
      - ./user-service:/app

  user-service-3:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service-3
    expose:
        - "3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    volumes:
        - ./user-service:/app

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./product-service:/app

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # internal message port (used by amqplib)
      - "15672:15672"   # management UI at http://localhost:15672
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "6379:6379"
      - "8001:8001"  # RedisInsight
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      gateway:
        condition: service_started
    restart: unless-stopped
